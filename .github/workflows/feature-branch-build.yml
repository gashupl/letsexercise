# This workflow will build a .NET project and pack Power Platform solutions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Feature-Branch-Build

on:
  push:
    branches: [ "feature/**" ]

permissions:
  checks: write  # Allows writing test reports
  pull-requests: write  # Allows reporting results on PRs
  
jobs:
  build:

    runs-on: windows-latest

    env:
      SOLUTION_PATH: src\server\Pg.LetsExercise\Pg.LetsExercise.sln
      TEST_ASSEMBLY_PATH: src\server\Pg.LetsExercise\**\bin\Release\*.Tests.dll
      WEB_RESOURCE_FOLDER: src\client\Pg.LetsExercise.WebResources  
      CIRCLE_PROGRESS_CONTROL_FOLDER: src\client\Pg.LetsExercise.CircleProgressControl
      VSTEST_CONSOLE: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\Extensions\TestPlatform\vstest.console.exe

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install npm dependencies (WR)
        run: |
          cd ${{env.WEB_RESOURCE_FOLDER}}
          npm install

      - name: Build npm project (WR)
        run: |
          cd ${{env.WEB_RESOURCE_FOLDER}}
          npm run build
  
      - name: Install npm dependencies (PCF)
        run: |
          cd ${{env.CIRCLE_PROGRESS_CONTROL_FOLDER}}
          npm install

      - name: Build npm project (PCF)
        run: |
          cd ${{env.CIRCLE_PROGRESS_CONTROL_FOLDER}}
          npm run build
          
      - name: Restore NuGet packages
        run: nuget restore ${{ env.SOLUTION_PATH }}

      - name: Build solution
        run: msbuild ${{ env.SOLUTION_PATH }} /p:Configuration=Release /p:Platform="Any CPU"

      - name: Run xUnit tests with Visual Studio 2022 Test Runner
        run: |
          $testAssemblies = Get-ChildItem -Path "${{ env.TEST_ASSEMBLY_PATH }}" -Recurse
          foreach ($assembly in $testAssemblies) {
            & "${{ env.VSTEST_CONSOLE }}" $assembly.FullName /Logger:trx
          }

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: always()  # Ensures test results are published even if tests fail
        with:
          name: xUnit Test Results
          path: "**/*.trx"
          reporter: dotnet-trx